"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;
var _vitePluginMd = _interopRequireDefault(await jitiImport("vite-plugin-md"));function _interopRequireDefault(e) {return e && e.__esModule ? e : { default: e };} // https://nuxt.com/docs/api/configuration/nuxt-config
var _default = exports.default =
defineNuxtConfig({
  compatibilityDate: '2024-04-03',

  modules: ["nuxt-icon", "@pinia/nuxt", "@nuxt/ui", "@nuxt/content"],
  content: {
    documentDriven: true
  },

  srcDir: "src/",
  ssr: false,
  plugins: [
  '~/plugins/vue-the-mask.client.js'],


  runtimeConfig: {
    public: {
      baseURL: process.env.BASE_URL,
      appsURL: process.env.APPS_URL
    }
  },

  css: ['floating-vue/dist/style.css', '~/assets/css/componentStyles/style.css', '~/assets/css/componentStyles/global.css'],

  colorMode: {
    preference: 'light'
  },

  // config pwa
  app: {
    head: {
      title: 'WMS',
      link: [{ rel: "manifest", href: "/manifest.json" }],
      charset: "utf-8",
      viewport: "width=device-width, initial-scale=1",
      meta: [
      { charset: "utf-8" },
      { name: "viewport", content: "width=device-width, initial-scale=1" },
      {
        hid: "description",
        name: "description",
        content: "my website description"
      }]

    }
  },

  pinia: {
    autoImports: ["defineStore"]
  },

  vite: {
    server: {
      hmr: {
        // protocol: 'wss',
        protocol: 'ws',
        host: 'localhost', // ou o IP do seu ambiente
        overlay: false
      }
    },
    assetsInclude: ['**/*.xlsx', '**/*.mp4'],
    vueJsx: { optimize: true },
    plugins: [(0, _vitePluginMd.default)()]
  },
  extensions: ['.vue', '.md'],

  devtools: {
    enabled: true
  }
}); /* v9-3b0eff4fecf9c6c0 */
